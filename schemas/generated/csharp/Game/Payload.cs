// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game
{

public enum Payload : byte
{
  NONE = 0,
  Game_Login_LoginRequest = 1,
  Game_Login_LoginResponse = 2,
  Game_Login_EnterGameRequest = 3,
  Game_Login_EnterGameResponse = 4,
  Game_Syncs_PlayerEnterPush = 5,
  Game_Syncs_PlayerExitPush = 6,
  Game_Syncs_PlayerMoveRequest = 7,
  Game_Syncs_PlayerMoveResponse = 8,
  Game_Syncs_PlayerMovePush = 9,
  Game_Syncs_SkillSyncs = 10,
  Game_Syncs_DamageSyncs = 11,
  Game_Syncs_PlayerStateSyncs = 12,
  Game_Syncs_PlayerLevelChangeRequest = 13,
};



static public class PayloadVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((Payload)typeId)
    {
      case Payload.Game_Login_LoginRequest:
        result = Game.Login.LoginRequestVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Login_LoginResponse:
        result = Game.Login.LoginResponseVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Login_EnterGameRequest:
        result = Game.Login.EnterGameRequestVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Login_EnterGameResponse:
        result = Game.Login.EnterGameResponseVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerEnterPush:
        result = Game.Syncs.PlayerEnterPushVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerExitPush:
        result = Game.Syncs.PlayerExitPushVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerMoveRequest:
        result = Game.Syncs.PlayerMoveRequestVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerMoveResponse:
        result = Game.Syncs.PlayerMoveResponseVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerMovePush:
        result = Game.Syncs.PlayerMovePushVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_SkillSyncs:
        result = Game.Syncs.SkillSyncsVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_DamageSyncs:
        result = Game.Syncs.DamageSyncsVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerStateSyncs:
        result = Game.Syncs.PlayerStateSyncsVerify.Verify(verifier, tablePos);
        break;
      case Payload.Game_Syncs_PlayerLevelChangeRequest:
        result = Game.Syncs.PlayerLevelChangeRequestVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}


}
