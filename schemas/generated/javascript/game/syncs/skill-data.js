"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkillData = void 0;
exports.unionToSkillData = unionToSkillData;
exports.unionListToSkillData = unionListToSkillData;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const attached_data_js_1 = require("../../game/syncs/attached-data.js");
const melee_data_js_1 = require("../../game/syncs/melee-data.js");
const projectile_data_js_1 = require("../../game/syncs/projectile-data.js");
const random_point_data_js_1 = require("../../game/syncs/random-point-data.js");
var SkillData;
(function (SkillData) {
    SkillData[SkillData["NONE"] = 0] = "NONE";
    SkillData[SkillData["ProjectileData"] = 1] = "ProjectileData";
    SkillData[SkillData["RandomPointData"] = 2] = "RandomPointData";
    SkillData[SkillData["AttachedData"] = 3] = "AttachedData";
    SkillData[SkillData["MeleeData"] = 4] = "MeleeData";
})(SkillData || (exports.SkillData = SkillData = {}));
function unionToSkillData(type, accessor) {
    switch (SkillData[type]) {
        case 'NONE': return null;
        case 'ProjectileData': return accessor(new projectile_data_js_1.ProjectileData());
        case 'RandomPointData': return accessor(new random_point_data_js_1.RandomPointData());
        case 'AttachedData': return accessor(new attached_data_js_1.AttachedData());
        case 'MeleeData': return accessor(new melee_data_js_1.MeleeData());
        default: return null;
    }
}
function unionListToSkillData(type, accessor, index) {
    switch (SkillData[type]) {
        case 'NONE': return null;
        case 'ProjectileData': return accessor(index, new projectile_data_js_1.ProjectileData());
        case 'RandomPointData': return accessor(index, new random_point_data_js_1.RandomPointData());
        case 'AttachedData': return accessor(index, new attached_data_js_1.AttachedData());
        case 'MeleeData': return accessor(index, new melee_data_js_1.MeleeData());
        default: return null;
    }
}
