// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { PlayerData } from '../../game/player/player-data.js';


export class PlayerEnterPush {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlayerEnterPush {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlayerEnterPush(bb:flatbuffers.ByteBuffer, obj?:PlayerEnterPush):PlayerEnterPush {
  return (obj || new PlayerEnterPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlayerEnterPush(bb:flatbuffers.ByteBuffer, obj?:PlayerEnterPush):PlayerEnterPush {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlayerEnterPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

playerData(obj?:PlayerData):PlayerData|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new PlayerData()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPlayerEnterPush(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPlayerData(builder:flatbuffers.Builder, playerDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, playerDataOffset, 0);
}

static endPlayerEnterPush(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlayerEnterPush(builder:flatbuffers.Builder, playerDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  PlayerEnterPush.startPlayerEnterPush(builder);
  PlayerEnterPush.addPlayerData(builder, playerDataOffset);
  return PlayerEnterPush.endPlayerEnterPush(builder);
}
}
