// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { AttachedData } from '../../game/syncs/attached-data.js';
import { MeleeData } from '../../game/syncs/melee-data.js';
import { ProjectileData } from '../../game/syncs/projectile-data.js';
import { RandomPointData } from '../../game/syncs/random-point-data.js';


export enum SkillData {
  NONE = 0,
  ProjectileData = 1,
  RandomPointData = 2,
  AttachedData = 3,
  MeleeData = 4
}

export function unionToSkillData(
  type: SkillData,
  accessor: (obj:AttachedData|MeleeData|ProjectileData|RandomPointData) => AttachedData|MeleeData|ProjectileData|RandomPointData|null
): AttachedData|MeleeData|ProjectileData|RandomPointData|null {
  switch(SkillData[type]) {
    case 'NONE': return null; 
    case 'ProjectileData': return accessor(new ProjectileData())! as ProjectileData;
    case 'RandomPointData': return accessor(new RandomPointData())! as RandomPointData;
    case 'AttachedData': return accessor(new AttachedData())! as AttachedData;
    case 'MeleeData': return accessor(new MeleeData())! as MeleeData;
    default: return null;
  }
}

export function unionListToSkillData(
  type: SkillData, 
  accessor: (index: number, obj:AttachedData|MeleeData|ProjectileData|RandomPointData) => AttachedData|MeleeData|ProjectileData|RandomPointData|null, 
  index: number
): AttachedData|MeleeData|ProjectileData|RandomPointData|null {
  switch(SkillData[type]) {
    case 'NONE': return null; 
    case 'ProjectileData': return accessor(index, new ProjectileData())! as ProjectileData;
    case 'RandomPointData': return accessor(index, new RandomPointData())! as RandomPointData;
    case 'AttachedData': return accessor(index, new AttachedData())! as AttachedData;
    case 'MeleeData': return accessor(index, new MeleeData())! as MeleeData;
    default: return null;
  }
}
