// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class EnterGameEequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EnterGameEequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEnterGameEequest(bb:flatbuffers.ByteBuffer, obj?:EnterGameEequest):EnterGameEequest {
  return (obj || new EnterGameEequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEnterGameEequest(bb:flatbuffers.ByteBuffer, obj?:EnterGameEequest):EnterGameEequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EnterGameEequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

uid():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

mapId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

characterId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startEnterGameEequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUid(builder:flatbuffers.Builder, uid:number) {
  builder.addFieldInt32(0, uid, 0);
}

static addMapId(builder:flatbuffers.Builder, mapId:number) {
  builder.addFieldInt32(1, mapId, 0);
}

static addCharacterId(builder:flatbuffers.Builder, characterId:number) {
  builder.addFieldInt32(2, characterId, 0);
}

static endEnterGameEequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createEnterGameEequest(builder:flatbuffers.Builder, uid:number, mapId:number, characterId:number):flatbuffers.Offset {
  EnterGameEequest.startEnterGameEequest(builder);
  EnterGameEequest.addUid(builder, uid);
  EnterGameEequest.addMapId(builder, mapId);
  EnterGameEequest.addCharacterId(builder, characterId);
  return EnterGameEequest.endEnterGameEequest(builder);
}
}
